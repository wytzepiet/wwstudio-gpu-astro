---
import WebglCanvas from '../components/WebglCanvas.astro';
import { Card } from '@/components/ui/card';

import Me from '../images/me2.png';
import Luca from '../images/luca.png';
import Suiker from '../images/archief.png';
import Podwalk from '../images/podwalk.jpg';
import Prins from '../images/prins.png';
import CatchControl from '../images/catchcontrol.webp';

import PortfolioItem from '../components/PortfolioItem.astro';
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import TimelineItem from '@/components/TimelineItem.astro';
---

<script>
	import { query } from '../utils/generalUtils';
	import { gsap } from 'gsap';
	import { SplitText } from 'gsap/dist/SplitText';
	import ScrollTrigger from 'gsap/dist/ScrollTrigger';
	import { ScrollSmoother } from 'gsap/ScrollSmoother';
	import { createMouseListener } from '../utils/mouseMove';

	gsap.registerPlugin(SplitText, ScrollTrigger, ScrollSmoother);

	gsap.from('.home-title h1', { duration: 2, delay: 1.5, ease: 'power4.out', scale: 0.2 });
	gsap.from('.home-title h1', { duration: 1, delay: 1.5, opacity: 0 });

	const timelineItems = query('.scroll-timeline .item');
	const tl = gsap.timeline({
		scrollTrigger: {
			trigger: '.scroll-trigger',
			start: 'center center',
			end: `+=${(timelineItems.length + 4) * 500}px`,
			pin: true,
			scrub: 0
		}
	});
	tl.to('.home-title', { duration: 1, translateZ: 600, pointerEvents: 'none', ease: 'linear' });
	tl.to('.canvas', { duration: 1, filter: 'blur(20px)', opacity: 0 }, '>+2');

	timelineItems.forEach((item, i) => {
		const itemTl = gsap.timeline({ paused: true });
		const pop = { duration: 1, ease: 'power4.out' };

		const img = item.querySelector('.image');
		if (img) itemTl.from(img, { ...pop, rotate: 5, scale: 0.35 }, '<');

		const { words } = new SplitText(item.querySelector('.animate-text'), { type: 'words' });
		const stagger = item.classList.contains('about') ? 0.03 : 0.05;
		itemTl.from(words, { ...pop, y: '100%', rotate: 5, clipPath: 'inset(0 0 100% 0)', stagger }, '<');

		const info = item.querySelector('.info');
		if (info) itemTl.from(info, { ...pop, scale: 0.5 }, '<');

		const mouse = createMouseListener();

		const inner = item.querySelector('.inner') as HTMLElement;
		const onStart = () => {
			itemTl.restart();
			mouse.stopListening();
			mouse.onMove(({ x, y }) => {
				if (item.style.opacity == '0') return;
				const rotateX = (y - window.innerHeight / 2) / -40;
				const rotateY = (x - window.innerWidth / 2) / 40;
				gsap.to(inner, { duration: 0.5, rotateX, rotateY });
			});
		};

		const linear = { ease: 'linear', duration: 1 };

		tl.from(item, { duration: 0.001, pointerEvents: 'none' }, i == 0 ? '<' : '>');
		tl.from(inner, { ...linear, translateZ: -600, onStart });
		tl.from(item, { ...linear, duration: 0.5, opacity: 0 }, '<');
		if (i == timelineItems.length - 1) return;
		tl.to(inner, { ...linear, translateZ: 600 });
		tl.to(item, { ...linear, duration: 0.5, opacity: 0 }, '<+0.5');
		tl.to(item, { duration: 0.001, pointerEvents: 'none' });
	});
	tl.to('.canvas', { duration: 1, opacity: 0.6 }, '<');
</script>

<Layout title="Wytze Sligting">
	<div id="smooth-wrapper">
		<div id="smooth-content">
			<div class="scroll-trigger h-screen"></div>
		</div>
	</div>

	<div class="canvas fixed pointer-events-none top-0">
		<WebglCanvas delay={500} />
	</div>

	<style lang="postcss" is:global>
		.scroll-timeline {
			perspective: 1000px;
			transform-style: preserve-3d;
		}
	</style>
	<div class="scroll-timeline fixed top-0 w-full h-screen">
		<div class="home-title">
			<div class="absolute inset-0 bg-gradient-to-t from-black/25 via-transparent"></div>
			<h1 class="text-8xl uppercase h-full flex flex-col justify-end">
				<div>I build ideas.</div>
				<div class="text-[0.5em]">One pixel at a time.</div>
			</h1>
		</div>
		<TimelineItem class="about">
			<Card className="image overflow-hidden">
				<Image src={Me} alt="" class="w-32 mix-blend-screen" width={600} />
			</Card>
			<br />
			<div class="animate-text text-center">
				<p>Hey! I'm Wytze.</p>
				<p>A freelance computer nerd</p>
				<p>with an eye for design. I love</p>
				<p>to make an idea come to life.</p>
			</div>
		</TimelineItem>

		<TimelineItem>
			<h1 class="work animate-text text-9xl uppercase grid grid-cols-2 text-center">
				<div>w</div>
				<div>o</div>
				<div>r</div>
				<div>k</div>
			</h1>
		</TimelineItem>
		<style>
			h1.work > div {
				margin: calc(-0.4 * var(--var-size));
			}
		</style>

		<PortfolioItem
			image={Luca}
			title="Snakken naar Tichelaar"
			description="A rebellious exhibition about ceramics"
			tags={['Graphic design', 'Exposition design', 'Curation']}
		/>
		<PortfolioItem
			image={Suiker}
			title="Nationaal Suikerbieten archief"
			description="An arhcive website about the history of Dutch sugar industry"
			tags={['Web app', 'Solid.js', 'Supabase', 'Mux video']}
		/>
		<PortfolioItem
			image={Podwalk}
			title="Podwalk"
			description="A historical GPS guided audiotour"
			tags={['Mobile app', 'Flutter', 'GPS tracking', 'Narration & sound design']}
		/>
		<PortfolioItem
			image={Prins}
			title="Café de Prins"
			description="Revamping an iconic café and hotel"
			tags={['Interior design', 'Brand identity', 'Graphic design']}
		/>
		<PortfolioItem
			image={CatchControl}
			title="Catch Control"
			description="A monitoring app for nature enthousiasts"
			tags={['Mobile app', 'Flutter', 'Firebase', 'Hardware integration']}
		/>

		<TimelineItem>
			<div class="animate-text">
				<h2 class="text-9xl uppercase">Let's<br />chat</h2>

				<p class="font-hero text-foreground/65">
					Contact me for full time jobs, <br />
					freelance projects or just to say hello :-)
				</p>
				<a href="/" class="font-hero">hello@wytze.dev</a>
			</div>
		</TimelineItem>
	</div>
</Layout>
